#version 440

// Constants
layout(constant_id = 0) const uint WORKGROUP_SIZE_BOX = 128;
layout(constant_id = 1) const uint WORKGROUP_SIZE_TREE = 64;
layout(constant_id = 2) const uint WORKGROUP_SIZE_FORCE = 32;

layout(constant_id = 3) const float SIMULATION_TIME = 0.001;
layout(constant_id = 4) const float GRAVITATIONAL_CONST = 1;
layout(constant_id = 5) const float SOFTENING_LEN_SQR = 0.01;
layout(constant_id = 6) const float ACCURACY_PARAMETER_SQR = 1.0;

layout(constant_id = 7) const uint PARTICLE_COUNT = 0;
layout(constant_id = 8) const uint TREE_SIZE = 0;

const uint STRIDE = WORKGROUP_SIZE_BOX * WORKGROUP_SIZE_BOX;

// Particle buffers
layout(set = 0, binding = 0) coherent buffer ParticlesPosInBuffer {
	vec2 particlesPosIn[];
};
layout(set = 0, binding = 1) coherent buffer ParticlesVelInBuffer {
	vec2 particlesVelIn[];
};
layout(set = 0, binding = 2) coherent buffer ParticlesMassInBuffer {
	float particlesMassIn[];
};

layout(set = 1, binding = 0) coherent buffer ParticlesPosOutBuffer {
	vec2 particlesPosOut[];
};
layout(set = 1, binding = 1) coherent buffer ParticlesVelOutBuffer {
	vec2 particlesVelOut[];
};
layout(set = 1, binding = 2) coherent buffer ParticlesMassOutBuffer {
	float particlesMassOut[];
};

// Simulation buffers
layout(set = 2, binding = 0) coherent buffer StateBuffer {
	vec4 box;
	vec4 boxes[WORKGROUP_SIZE_BOX];
} state;
layout(set = 2, binding = 1) coherent buffer CountBuffer {
	uint counts[];
};
layout(set = 2, binding = 2) coherent buffer RadiusBuffer {
	float radiuses[];
};
layout(set = 2, binding = 3) coherent buffer SrcBuffer {
	uint sortedSrc[];
};
layout(set = 2, binding = 4) coherent buffer TreeCountBuffer {
	uvec2 counts[];
} treeCounts[10];
layout(set = 2, binding = 5) coherent buffer TreeStartBuffer {
	uvec2 starts[];
} treeStarts[10];
layout(set = 2, binding = 6) coherent buffer TreePosBuffer {
	vec2 pos[];
} treePos[10];
layout(set = 2, binding = 7) coherent buffer TreeMassBuffer {
	float mass[];
} treeMass[10];

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

void main() {
	// Reset all tree leaf values
	for(uint i = gl_GlobalInvocationID.x; i < TREE_SIZE * TREE_SIZE; i += STRIDE) {
		treeCounts[9].counts[i] = uvec2(0);
		treeStarts[9].starts[i] = uvec2(0);
		treePos[9].pos[i] = vec2(0);
		treeMass[9].mass[i] = 0;
	}
}
